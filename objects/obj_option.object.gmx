<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise variables
x = global.optionAlign;

color = $EAEAEA; 
colorSelected = $D5E233;
optionID = -1;

draw_set_circle_precision(64);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Option control

if(point_in_rectangle(mouse_x, mouse_y, x, y, x + box_width, y + box_height) &amp;&amp; mouse_check_button_pressed(mb_left)) {
    //global.optionSelected = optionID;
    //Hook into transistion
    //global.newMessage.receiving = true;
    
    distanceToStart = (global.optionBoxStart) - global.newMessage.y -  global.newMessage.box_height - (global.padding * 4);
    with(obj_messagePlayer) {
        y += other.distanceToStart
    }
    
    with(obj_messageOther) {
        y += other.distanceToStart
    }
    
    global.newMessage = scr_createBox(text, global.optionBoxStart, obj_messagePlayer);
    global.newMessage.convoID = id;
    //global.newMessage.transition = true;
    
    scr_moveMessage(text);
    
    with(convoID) {
        //show_debug_message("Redo");
        //scr_addMessage(other.text, obj_messagePlayer);
        scrNPCDialogOption(other.optionID);
        scr_convoContinue();
        //game_save("Save.dat");
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw box
if(global.newMessage.receiving) {
    draw_set_alpha(0.50);
} else {
    draw_set_alpha(1)
}
//if (alpha &lt; 1) alpha += 0.05; //else alpha = 1;

//draw_rectangle(x, y, x + box_width, y + box_height, false);

//Other options
//draw_sprite_stretched(sprite, subimg, x, y, w, h);
if(global.optionSelected == optionID) {
    draw_set_color(colorSelected);
    draw_roundrect_ext(x - global.padding/2, y - global.padding/2, x + box_width + global.padding/2, y + box_height + global.padding/2, 20, 25, false);
}

draw_set_color(color);
draw_roundrect_ext(x, y, x + box_width, y + box_height, 20, 25, false);

draw_set_color(c_black);
draw_set_font(global.font);
draw_set_halign(fa_left);
draw_set_valign(fa_top);

draw_text_ext
(
    x + global.padding,
    y + global.padding,
    text,
    global.font_size+(global.font_size/2),
    view_wview[0] - (global.padding * 2)
);

draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
