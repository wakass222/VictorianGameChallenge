<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ySpeed = 0;
frictionDrag = 5;
grabbed = false;
grabTime = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(point_in_rectangle(mouse_x, mouse_y, 0, global.bannerSize, view_wview[0], view_hview[0] - global.optionBoxSize) &amp;&amp; mouse_check_button_pressed(mb_left)) {
    grabbed = true;
    ydragStart = mouse_y;
    show_debug_message("Registered");
}

if(grabbed &amp;&amp; mouse_check_button(mb_left)) {
    grabTime += delta_time;
}

if(abs(ySpeed) &gt; abs(frictionDrag)) {
    ySpeed -= frictionDrag * sign(ySpeed);
} else {
    ySpeed = 0;
}

if(grabbed &amp;&amp; mouse_check_button_released(mb_left)) {
    grabbed = false;
    
    grabTime /= 20000;
    
    ySpeed = (mouse_y - ydragStart) * (1/grabTime);
    
    if(abs(ySpeed) &gt; 100) {
        ySpeed = sign(ySpeed) * 100;
    }
    
    if(abs(ySpeed) &lt; 10) {
        ySpeed = 0;
    }
}
/*
if(global.newMessage.y &gt; global.optionBoxSize) {

    var distanceToMove = global.newMessage.y - (view_hview[0] - global.optionBoxSize)

    with(obj_messagePlayer) {
        y += distanceToMove;
    }
    
    with(obj_messageOther) {
        y += distanceToMove;
    }
    ySpeed = 0;
}
*/
with(obj_messagePlayer) {
    y += other.ySpeed;
}

with(obj_messageOther) {
    y += other.ySpeed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
